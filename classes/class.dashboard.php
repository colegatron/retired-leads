<?php/** Leads Dashboard Widget */class Leads_Dashboard {    public function __construct() {        $enable = Leads_Settings::get_setting('wpl-main-enable-dashboard', 1);        $disable = Leads_Settings::get_setting('wpl-main-disable-widgets', 1);        if ($disable) {            add_action('wp_dashboard_setup', array($this, 'remove_dashboard_widgets'));        }        if ($enable) {            add_action('wp_dashboard_setup', array($this, 'add_dashboard_widgets'));        }        add_action('admin_enqueue_scripts', array(__CLASS__, 'register_admin_scripts'));        add_action('admin_head', array(__CLASS__, 'add_inline_header_scripts'));                /*saves the widget load status to the wp options when "Screen Options" change*/        add_action('wp_ajax_dashboard_widget_load_status', array(__CLASS__, 'ajax_dashboard_widget_load_status'));    }    public static function remove_dashboard_widgets() {        $remove_defaults_widgets = array(            'dashboard_incoming_links' => array(                'page' => 'dashboard',                'context' => 'normal'            ),            'dashboard_right_now' => array(                'page' => 'dashboard',                'context' => 'normal'            ),            'dashboard_recent_drafts' => array(                'page' => 'dashboard',                'context' => 'side'            ),            'dashboard_quick_press' => array(                'page' => 'dashboard',                'context' => 'side'            ),            'dashboard_plugins' => array(                'page' => 'dashboard',                'context' => 'normal'            ),            'dashboard_primary' => array(                'page' => 'dashboard',                'context' => 'side'            ),            'dashboard_secondary' => array(                'page' => 'dashboard',                'context' => 'side'            ),            'dashboard_recent_comments' => array(                'page' => 'dashboard',                'context' => 'normal'            ),            'rg_forms_dashboard' => array(                'page' => 'dashboard',                'context' => 'normal'            ),        );        foreach ($remove_defaults_widgets as $wigdet_id => $options) {            remove_meta_box($wigdet_id, $options['page'], $options['context']);        }    }    public static function add_dashboard_widgets() {        if (!current_user_can('activate_plugins')) {            return;        }        $custom_dashboard_widgets = array(            'wp-lead-stats' => array(                'title' => __('Lead Events', 'inbound-pro'),                'callback' => array(__CLASS__, 'display_lead_report_widget')            ),            'wp-lead-latest-leads' => array(                'title' => __('Latest Leads', 'inbound-pro'),                'callback' => array(__CLASS__, 'display_latest_leads_widget'),            ),            'wp-lead-list-performance' => array(                'title' => __('List Performance', 'inbound-pro'),                'callback' => array(__CLASS__, 'display_list_performance_widget'),            ),        );        foreach ($custom_dashboard_widgets as $widget_id => $options) {            wp_add_dashboard_widget(                $widget_id,                $options['title'],                $options['callback']            );        }    }    public static function register_admin_scripts($hook) {        if ('index.php' == $hook) {            wp_enqueue_script('jquery-cookie', WPL_URLPATH . 'assets/js/jquery.cookie.js', array(), null, true);            wp_enqueue_script('flot', WPL_URLPATH . 'assets/js/jquery.flot.js', array(), null, false);            wp_enqueue_script('flot-stack', WPL_URLPATH . 'assets/js/jquery.flot.stack.js', array(), null, false);            wp_enqueue_script('flot-time', WPL_URLPATH . 'assets/js/jquery.flot.time.js', array(), null, false);            wp_enqueue_script('flot-axislabels', WPL_URLPATH . 'assets/js/jquery.flot.axislabels.js', array(), null, false);            wp_enqueue_script('lead-flot-functions', WPL_URLPATH . 'assets/js/lead-flot-functions.js', array(), null, false);            wp_enqueue_script('custom-dashboard-js', WPL_URLPATH . 'assets/js/custom-dashboard.js', array(), false, true);            wp_enqueue_style('custom-dashboard-css', WPL_URLPATH . '/assets/css/wpl.dashboard.css');        }    }    public static function get_lead_count_from_last_24h() {        global $wpdb;        $numposts = $wpdb->get_var(            $wpdb->prepare(                "SELECT COUNT(ID) " .                "FROM {$wpdb->posts} " .                "WHERE " .                "post_status='publish' " .                "AND post_type= %s " .                "AND post_date> %s",                'wp-lead', date('Y-m-d H:i:s', strtotime('-24 hours'))            )        );        return $numposts;    }    public static function display_lead_report_widget() {        global $wpdb;        /*find out if the widget should display*/        if (!defined('INBOUND_PRO_CURRENT_VERSION')) {            $dashboard_widget_display_settings = get_option('dashboard_widget_display_settings', array());            if(isset($dashboard_widget_display_settings['wp-lead-stats'])){                $render_widget = $dashboard_widget_display_settings['wp-lead-stats'];            }else{                $render_widget = true;            }        } else {            $settings = Inbound_Options_API::get_option('inbound-pro', 'settings', array());            if(isset($settings['leads']['dashboard_widget_display_settings']['wp-lead-stats'])){                $render_widget = $settings['leads']['dashboard_widget_display_settings']['wp-lead-stats'];                        }else{                $render_widget = true;            }        }        /*if the widget isn't supposed to display, echo a short message and exit*/        if ( $render_widget == 'false' ) {            /*output a message for when the widget is re-enabled*/            echo '<div style="height: 220px; text-align: center;">                    <h3 style="position: relative; top:49%">' . __('Refresh the page to load this widget', 'inbound-pro') . '</h3>                </div>';            return;        }        $count_posts = wp_count_posts('wp-lead');        $url = site_url();        /* ***doesn't seem to do anything***        $c_month = date('n') == 1 ? 12 : date('n'); // GETS INT from EDD        $previous_month = date('n') == 1 ? 12 : date('n') - 1; // GETS INT from EDD        $previous_year = $previous_month == 12 ? date('Y') - 1 : date('Y'); // Gets INT year val        */        $start_current = date("Y-m-01"); // start of current month        $end_current = date("Y-m-t", strtotime('last day of this month')); // end of current month        //getting the previous month        $previous_month_start = date("Y-m-01", strtotime("previous month"));        $previous_month_end = date("Y-m-d", strtotime("-1 month"));        $this_month = self::count_leads_by_time($start_current, $end_current);        $last_month = self::count_leads_by_time($previous_month_start, $previous_month_end);        $all_time_leads = $count_posts->publish;        $all_lead_text = ($all_time_leads == 1) ? "Lead" : "Leads";        $leads_today = Leads_Dashboard::get_lead_count_from_today('wp-lead');        $leads_today_text = ($leads_today == 1) ? "Lead" : "Leads";        $month_comparasion = $this_month - $last_month;        if ($month_comparasion < 0) {            $month_class = 'negative-leads';            $sign = "";            $sign_text = __('Decrease ', 'inbound-pro');        } elseif ($month_comparasion === 0) {            $month_class = 'no-change';            $sign = "";            $sign_text = __('No Change ', 'inbound-pro');        } else {            $month_class = 'positive-leads';            $sign = "+";            $sign_text = __('Increase ', 'inbound-pro');        }        echo '<div id="lead-before-dashboard">';        do_action('wp_lead_before_dashboard');        echo "</div>";        $clean_dates = date("m", strtotime("first day of previous month"));        $clean_date_two = date("m");        ?>        <!--[if lte IE 8]>        <script language="javascript" type="text/javascript" src="/wp-content/plugins/lead-dashboard-widgets/assets/js/flot/excanvas.min.js"></script><![endif]-->        <div class="wp_leads_dashboard_widget">            <script type="text/javascript">                /* <![CDATA[ */                window.data1 = [ <?php echo self::get_lead_graph_data($clean_date_two, 'this-month'); ?> ];                window.data2 = [ <?php echo self::get_lead_graph_data($clean_dates, 'last-month'); ?> ];                /* ]]> */            </script>            <div id="flot-placeholder" style='width: 100%; height: 250px; margin: 10px auto 0px; padding: 0px; position: relative; margin-bottom:10px;'></div>            <div id="wp-leads-stat-boxes">                <div class='wp-leads-today'>                    <a class="data-block widget-block" alt='Click to View Todays Leads' href="<?php echo $url . "/wp-admin/edit.php?post_type=wp-lead&current_date"; ?>">                        <section>                            <?php echo $leads_today; ?>                            <br><?php echo $leads_today_text; ?>                            <br><strong><?php _e('Today', 'inbound-pro'); ?></strong>                        </section>                    </a>                </div>                <div class='wp-leads-this-month'>                    <a class="data-block widget-block" alt='Click to View This Months Leads' href="<?php echo $url . "/wp-admin/edit.php?post_type=wp-lead&current_month"; ?>">                        <section>                            <?php echo $this_month; ?>                            <br><?php echo $all_lead_text; ?>                            <br><strong><?php _e('This Month', 'inbound-pro'); ?></strong>                        </section>                    </a>                </div>                <div class='wp-leads-all-time'>                    <a class="data-block widget-block" title='Click to View All Leads' href="<?php echo $url . "/wp-admin/edit.php?post_type=wp-lead"; ?>">                        <section>                            <?php echo $all_time_leads; ?>                            <br><?php _e('Leads', 'inbound-pro'); ?>                            <strong><?php _e('All Time', 'inbound-pro'); ?></strong>                        </section>                    </a>                </div>                <div class="wp-leads-change-box" style="text-align: center;">                    <small class='<?php echo $month_class; ?>'><?php echo "<span>" . $sign . $month_comparasion . "</span> " . $sign_text; ?><?php _e('Since Last Month', 'inbound-pro'); ?></small>                </div>            </div>            <!-- <div class='wp-leads-last-month'>			last month: <?php echo $last_month; ?>			<?php echo $this_month - $last_month; ?>			</div>	-->        </div>        <?php    }        /**     * Displays the latest converted leads.     */    public static function display_latest_leads_widget(){                /*find out if the widget should display*/        if (!defined('INBOUND_PRO_CURRENT_VERSION')) {            $dashboard_widget_display_settings = get_option('dashboard_widget_display_settings', array());            if(isset($dashboard_widget_display_settings['wp-lead-latest-leads'])){                $render_widget = $dashboard_widget_display_settings['wp-lead-latest-leads'];            }else{                $render_widget = true;            }        } else {            $settings = Inbound_Options_API::get_option('inbound-pro', 'settings', array());            if(isset($settings['leads']['dashboard_widget_display_settings']['wp-lead-latest-leads'])){                $render_widget = $settings['leads']['dashboard_widget_display_settings']['wp-lead-latest-leads'];                        }else{                $render_widget = true;            }        }        /*if the widget isn't supposed to display, echo a short message and exit*/        if ( $render_widget == 'false' ) {            /*output a message for when the widget is re-enabled*/            echo '<div style="height: 220px; text-align: center;">                    <h3 style="position: relative; top:49%">' . __('Refresh the page to load this widget', 'inbound-pro') . '</h3>                </div>';            return;        }        ?>        <div id='leads-list'>                <?php $r = new WP_Query(apply_filters('widget_posts_args', array(                    'posts_per_page' => 20,                    'post_type' => 'wp-lead',                    'post_status' => 'publish')));                if ($r->have_posts()) : ?>                    <h4 class='marketing-widget-header'>Latest Leads<span class="toggle-lead-list">-</span></h4>                    <ul id='lead-ul'>                        <?php while ($r->have_posts()) : $r->the_post(); ?>                            <li><?php $id = get_the_ID();                                $first_name = get_post_meta($id, 'wpleads_first_name', true);                                $last_name = get_post_meta($id, 'wpleads_last_name', true);                                $name = $first_name . " " . $last_name;                                if ($name === " ") {                                    $name = get_the_title($id);                                }                                                                $avatar_link = Leads_Post_Type::get_gravatar($id, 20);                                $img = "<img src=\"$avatar_link\" width=\"20\" height=\"20\" class=\"latest-leads-mini-avatar\" />";                                ?>                                <?php edit_post_link($img . $name); ?> on <?php the_time('F jS, Y'); ?> (<?php the_title(); ?>)                            </li>                        <?php endwhile; ?>                    </ul>                <?php endif; ?>            </div>        <?php        }            public static function count_leads_by_time($start_current, $end_current) {        global $wpdb;        global $table_prefix;        $numposts = $wpdb->get_var(            $wpdb->prepare(                "SELECT COUNT(ID) " .                "FROM {$wpdb->posts} " .                "WHERE post_status='publish' " .                "AND post_type= %s " .                "AND {$table_prefix}posts.post_date BETWEEN %s AND %s",                'wp-lead', $start_current, $end_current            )        );        return $numposts;    }    public static function get_lead_count_from_today() {        global $wpdb;        global $table_prefix;        $wordpress_date_time = $timezone_format = _x('Y-m-d', 'timezone date format');        $wordpress_date_time = date_i18n($timezone_format);        $wordpress_date = $timezone_day = _x('d', 'timezone date format');        $wordpress_date = date_i18n($timezone_day);        $today = $wordpress_date_time; // Corrected timezone        $tomorrow = date("Y-m-d", strtotime("+2 day")); // Hack to look 2 days ahead        $numposts = $wpdb->get_var(            $wpdb->prepare(                "SELECT COUNT(ID) " .                "FROM {$wpdb->posts} " .                "WHERE post_status='publish' " .                "AND post_type= %s " .                "AND {$table_prefix}posts.post_date BETWEEN %s AND %s",                'wp-lead', $today, $tomorrow            )        );        return $numposts;    }    public static function get_lead_graph_data($month, $type) {        global $wpdb;        global $table_prefix;        $wordpress_date_time = $timezone_format = _x('Y-m-d', 'timezone date format');        $wordpress_date_time = date_i18n($timezone_format);        $wordpress_date = $timezone_day = _x('d', 'timezone date format');        $wordpress_date = date_i18n($timezone_day);        $this_year = _x('Y', 'timezone date format');        $this_year = date_i18n($this_year);        $loop_count = date('d', strtotime('last day of this month'));        $final_loop_count = cal_days_in_month(CAL_GREGORIAN, $month, $this_year); // Count of days in month                /*if last month was december, wind back the year*/        if($type === "last-month" && $month == '12'){            $this_year -= 1;        }        //echo $final_loop_count; // How many times to run        $lead_increment = 0;        for ($i = 1; $i < $final_loop_count + 1; $i++) {            // echo "hi" . $i;            $year = $this_year;            $day = $i;            $next_day = $i + 1;            $m = $month;            $Date = strtotime($year . "-" . $m . "-" . $day);            $Date_next = strtotime($year . "-" . $m . "-" . $next_day);            $clean_date_one = date('Y-m-d', $Date);            $clean_date_one_formatted = date('Y, n, d', $Date);            if ($type === "last-month") {                $Date = strtotime($year . "-" . $m . "-" . $day . ' +1 months');                $clean_date_one_formatted = date('Y, m, d', $Date);            }            $clean_date_two = date('Y-m-d', $Date_next);            //echo $clean_date_one . "<br>";            $numposts = $wpdb->get_var(                $wpdb->prepare(                    "SELECT COUNT(ID) " .                    "FROM {$wpdb->posts} " .                    "WHERE post_status='publish' " .                    "AND post_type= %s " .                    "AND {$table_prefix}posts.post_date BETWEEN %s AND %s",                    'wp-lead', $clean_date_one, $clean_date_two                )            );            $lead_increment += $numposts;            //echo "Day is: ". $day . " " . $numposts . " on " . $clean_date_one	.	"<br>";            echo "[gd(" . $clean_date_one_formatted . "), " . $lead_increment . ", " . $numposts . "], ";        }    }    public static function add_inline_header_scripts() {        if (!class_exists('Inbound_Pro_Plugin')) {            return;        }        ?>        <style type="text/css">            #wpadminbar .adminbar-leads-search .lead-quick-search {                display: inline !important;            }            #wpadminbar .adminbar-leads-search .fa {                font-family: 'FontAwesome'            }            #wpadminbar .adminbar-leads-search form {                display: inline !important;                width: auto;                height: auto;            }            #wpadminbar .adminbar-leads-search .lead-quick-search input, #wpadminbar .adminbar-leads-search .lead-quick-search input, #wpadminbar .adminbar-leads-search .lead-quick-search input:focus {                width: 1px;                -webkit-transition: all .3s cubic-bezier(0, 0, .5, 1.5);                transition: all .3s cubic-bezier(0, 0, .5, 1.5);                font-size: 9px;                height: 25px;                margin-top: 3px;                padding-bottom: 0px;                padding-top: 0px;                padding-left: 3px;                color: #eee;                background-color: #444;                margin-right: 5px;                border: none;                line-height: 30px;                display: none;            }        </style>        <section class="lead-quick-search" style="display:none" method="get">            <form action="<?php echo admin_url('edit.php?s=hudson.atwell%40gmail.com&post_status=all&post_type=wp-lead'); ?>">                <input name="s" type="search" placeholder="<?php _e('Search Leads', 'inbound-pro'); ?>">                <input type="hidden" name="post_type" value="wp-lead">            </form>        </section>        <script type="text/javascript">            jQuery(document).ready(function () {                var on = false;                jQuery('.lead-quick-search').prependTo('.adminbar-leads-search .ab-item');                jQuery('.adminbar-leads-search .fa-search').click(function () {                    if (!on) {                        jQuery('.lead-quick-search input').show().animate({                            width: '70%'                        }, 200);                        on = true;                    } else {                        jQuery('.lead-quick-search input').animate({                            width: '0px'                        }, 200).hide();                        on = false;                    }                });            });        </script>        <?php        /* load fontawesome */        wp_enqueue_style('fontawesome', INBOUNDNOW_SHARED_URLPATH . 'assets/fonts/fontawesome/css/font-awesome.min.css');    }    /**     * Shows the lead generation performance of lists compared to this time yesterday, and by this date last month     */    public static function display_list_performance_widget(){        global $wpdb;        /*find out if the widget should display*/        if (!defined('INBOUND_PRO_CURRENT_VERSION')) {            $dashboard_widget_display_settings = get_option('dashboard_widget_display_settings', array());            if(isset($dashboard_widget_display_settings['wp-lead-list-performance'])){                $render_widget = $dashboard_widget_display_settings['wp-lead-list-performance'];            }else{                $render_widget = true;            }        } else {            $settings = Inbound_Options_API::get_option('inbound-pro', 'settings', array());            if(isset($settings['leads']['dashboard_widget_display_settings']['wp-lead-list-performance'])){                $render_widget = $settings['leads']['dashboard_widget_display_settings']['wp-lead-list-performance'];                        }else{                $render_widget = true;            }        }        /*if the widget isn't supposed to display, echo a short message and exit*/        if ( $render_widget == 'false' ) {            /*output a message for when the widget is re-enabled*/            echo '<div style="height: 220px; text-align: center;">                    <h3 style="position: relative; top:49%">' . __('Refresh the page to load this widget', 'inbound-pro') . '</h3>                </div>';            return;        }        $time = new DateTime(date_i18n('Y-m-d G:i:s T'));        $today = $time->format('Ymd');        $this_month = $time->modify('first day of this month')->format('Ym');        $lists = Inbound_Leads::get_lead_lists_as_array();        ?>                <div class="list-performance-content-wrapper">            <h3 id="list-perfomance-content-header"><?php _e('List Performance Breakdown-', 'inbound-pro'); ?></h3>                        <?php            $table_count_number = 1;            foreach( $lists as $id=>$label ){              ?>                  <table class="ia-table-summary">                    <tbody>                        <tr class="list-performance-header-row">                            <td id="list-performance-list-name-header-<?php echo $table_count_number; ?>" class="list-performance-list-name-header">                                <label title="<?php _e('The name of the lead list who\'s stats are being displayed', 'inbound-pro'); ?>">                                    <?php _e('Lead list: ', 'inbound-pro'); echo $label; ?>                                </label>                            </td>                                                <td id="list-performance-lead-count-header-<?php echo $table_count_number; ?>" class="list-performance-lead-count-header">                                <label title="<?php _e('The number of leads that have been added to this list over a given time period', 'inbound-pro'); ?>">                                    <?php _e('Leads', 'inbound-pro');?>                                </label>                            </td>                            <td id="list-performance-count-change-header-<?php echo $table_count_number; ?>" class="list-performance-count-change-header" title="<?php _e('The percent difference in lead growth between now and an earlier date', 'inbound-pro'); ?>">                                <label class="no-wrap"><?php _e('Change from this time:', 'inbound-pro'); ?></label>                            </td>                                                <td id="list-perfomance-spacer-row-header-<?php echo $table_count_number; ?>" class="list-perfomance-spacer-row-header">                            </td>                        </tr>                        <!-- leads from today-->                        <tr class="list-performance-content-row">                            <?php                                 $todays_leads = count(self::get_list_event_data($id, '12 am today'));                                $yesterdays_leads =  count(self::get_list_event_data($id, '12 am today', '12 am today -1 days'));                                $yesterdays_leads_at_this_time = count(self::get_list_event_data($id, 'now -1 days', '12 am today'));                                                                if($yesterdays_leads_at_this_time == 0 && $todays_leads == 0){                                /*if there were no leads yesterday and there's none today, set the displayed output to 0%*/                                    $day_change = '0%';                                    $day_difference_class = 'lead-count-no-change';                                }else if($yesterdays_leads_at_this_time == 0 && $todays_leads > 0){                                /*if there were no leads yesterday but there are leads today, set the increase to 100%*/                                    $day_change = '100%';                                    $day_difference_class = 'lead-count-increase';                                }else{                                /*if there were leads yesterday, get the percent difference between now and this time yesterday*/                                    $day_change = ($todays_leads/$yesterdays_leads_at_this_time * 100) - 100;                                                                        /*set the appropriate css class for the difference*/                                    if($day_change > 0){                                        $day_difference_class = 'lead-count-increase';                                    }else if($day_change < 0){                                        $day_difference_class = 'lead-count-decrease';                                    }else{                                        $day_difference_class = 'lead-count-no-change';                                    }                                                                        $day_change = round($day_change, 2) . '%';                                }                            ?>                                                <td class="ia-td-label">                                <label class="no-wrap list-performance-label" title="<?php printf(__('Total leads added to &quot;%s&quot; today', 'inbound-pro'), $label); ?>">                                    <?php _e('Leads added today:', 'inbound-pro'); ?>                                </label>                            </td>                            <td>                                <a href="<?php echo admin_url('edit.php?s&post_status=all&post_type=wp-lead&action=-1&m=' . $today . '&wp_lead_status=0&wplead_list_category=' . $id . '&lead-tags=0&filter_action=Filter&paged=1&action2=-1'); ?>" class="thickbox inbound-thickbox">                                    <?php echo $todays_leads; ?>                                </a>                            </td>                            <td>                                <span class="no-wrap" title="<?php _e('This is the difference leads generated between now and this time yesterday', 'inbound-pro'); ?>"><?php _e('Yesterday', 'inbound-pro'); ?></span>                            </td>                            <td>                                                               <span class="stat list-performance-change-pill <?php echo $day_difference_class;?>" title="<?php printf(_n( 'By this time yesterday %s lead was added to &quot;' . $label . '&quot;. ', 'By this time yesterday %s leads had been added to &quot;' . $label . '&quot;. ', 'inbound-pro'), number_format_i18n( $yesterdays_leads_at_this_time ));                                                                                                                                  printf(_n( '%s lead was added to &quot;' . $label . '&quot; yesterday. ', 'A total of %s leads were added to &quot;' . $label . '&quot; yesterday.', 'inbound-pro'), number_format_i18n( $yesterdays_leads )); ?>" data-toggle="tooltip" data-placement="left">                                    <?php echo $day_change; ?>                                </span>                            </td>                        </tr>                        <!--leads from this month-->                        <tr class="list-performance-content-row">                            <?php                                $this_months_leads = count(self::get_list_event_data($id, 'first day of this month'));                                $last_months_leads = count(self::get_list_event_data($id, 'first day of this month', 'first day of this month -1 months'));                                $last_month_at_this_time = count(self::get_list_event_data($id, 'now -1 months', 'first day of this month'));                                if($last_month_at_this_time == 0 && $this_months_leads == 0){                                /*if there were no leads last month and there's none today, set the displayed output to 0%*/                                    $month_change = '0%';                                    $month_difference_class = 'lead-count-no-change';                                }else if($last_month_at_this_time == 0 && $this_months_leads > 0){                                /*if there were no leads last month but there are leads today, set the increase to 100%*/                                    $month_change = '100%';                                    $month_difference_class = 'lead-count-increase';                                }else{                                /*if there were leads last month, get the percent difference between the leads so far and the leads at this time last month*/                                    $month_change = ($this_months_leads/$last_month_at_this_time * 100) - 100;                                                                        /*set the appropriate css class for the difference*/                                    if($month_change > 0){                                        $month_difference_class = 'lead-count-increase';                                    }else if($month_change < 0){                                        $month_difference_class = 'lead-count-decrease';                                    }else{                                        $month_difference_class = 'lead-count-no-change';                                    }                                                                        $month_change = round($month_change, 2) . '%';                                }                            ?>                            <td class="ia-td-label">                                <label class="no-wrap list-performance-label" title="<?php printf(__('The number of leads that have been added to &quot;%s&quot; for this month', 'inbound-pro'), $label); ?>">                                    <?php _e('Leads added this month:', 'inbound-pro'); ?>                                </label>                            </td>                            <td>                                <a href="<?php echo admin_url('edit.php?s&post_status=all&post_type=wp-lead&action=-1&m=' . $this_month . '&wp_lead_status=0&wplead_list_category=' . $id . '&lead-tags=0&filter_action=Filter&paged=1&action2=-1'); ?>" class="thickbox inbound-thickbox">                                    <?php echo $this_months_leads; ?>                                </a>                            </td>                            <td>                                <span class="no-wrap" title="<?php _e('This is the difference between leads generated so far this month, and the amount of leads generated by this date last month', 'inbound-pro'); ?> "><?php _e('Last Month', 'inbound-pro'); ?></span>                            </td>                            <td>                                <span class="stat list-performance-change-pill no-wrap <?php echo $month_difference_class; ?>" title="<?php printf( _n( 'By this day last month, %s lead had been added to &quot;' . $label . '&quot;. ', 'By this day last month, %s leads were added to &quot;' . $label . '&quot;. ', $last_month_at_this_time, 'inbound-pro' ), number_format_i18n( $last_month_at_this_time ) );                                                                                                                                            printf( _n( 'Last month %s lead was added to &quot;' . $label . '&quot;. ', 'There was a total of %s leads that were added to &quot;' . $label . '&quot; last month. ', $last_months_leads, 'inbound-pro' ), number_format_i18n( $last_months_leads ) );?>" data-toggle="tooltip" data-placement="left">                                   <?php echo $month_change; ?>                                </span>                            </td>                        </tr>                    </tbody>                </table>              <?php                $table_count_number++;            }//end foreach        ?>        </div>    <?php    }            /**     * Retrieves the leads added to a list between a start date and right now.     * If second date argument is supplied, leads will be retrieved from a time period starting at     * the second time arg and ending at the time specified by the first arg.     */    public static function get_list_event_data($id, $start_date = 'now', $older_start_date = false){        global $wpdb;                if(empty($id)){            return;        }        $today = new DateTime(date_i18n('Y-m-d G:i:s T'));        $dates['end_date'] = $today->format('Y-m-d G:i:s T');        $today->modify($start_date);        $dates['start_date'] =  $today->format('Y-m-d G:i:s T');               $table_name = $wpdb->prefix . "inbound_events";                $query = 'SELECT DISTINCT lead_id';        $query .= ' FROM ' . $table_name . ' WHERE 1=1 ';        $query .= ' AND list_id = ' . $id;                /*if a second date is supplied, that is used as the new start date and $start_date is used as the new end date*/        if(gettype($older_start_date) == 'string' && !empty($older_start_date)){            /* generate dates for previous date-range */            $today->modify($older_start_date);            $dates['past_start_date'] = $today->format('Y-m-d G:i:s T');            $dates['past_end_date'] = $dates['start_date'];                        $query .= ' AND datetime >= "' . $dates['past_start_date'] . '" AND datetime <= "'. $dates['past_end_date'] .'" ';                    }else{            $query .= ' AND datetime >= "' . $dates['start_date'] . '" AND datetime <= "'. $dates['end_date'] .'" ';        }        $results = $wpdb->get_results( $query, ARRAY_A );             return $results;    }    /**     * Saves the dashboard widget load status when the "Screen Options" change.     * The values are saved as either "true" or "false"     */    public static function ajax_dashboard_widget_load_status(){            if (!defined('INBOUND_PRO_CURRENT_VERSION')) {                                $dashboard_widget_display_settings = get_option('dashboard_widget_display_settings', array());                                foreach($_POST['widget_data'] as $index=>$key){                    if($key == 'true' || $key == 'false'){                        $dashboard_widget_display_settings[sanitize_text_field($index)] = $key;                    }                }                                update_option('dashboard_widget_display_settings', $dashboard_widget_display_settings);                            } else {                                $settings = Inbound_Options_API::get_option('inbound-pro', 'settings', array());                foreach($_POST['widget_data'] as $index=>$key){                    if($key == 'true' || $key == 'false'){                        $settings['leads']['dashboard_widget_display_settings'][sanitize_text_field($index)] = $key;                                        }                }                                Inbound_Options_API::update_option('inbound-pro', 'settings', $settings);            }        die();            }}new Leads_Dashboard();